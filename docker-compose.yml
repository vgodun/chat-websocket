services:
  postgres:
    image: postgres:15-alpine
    container_name: chat-postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - chat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d chat_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  chat-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-api
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "3001:3001"
    networks:
      - chat-network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./nest-cli.json:/app/nest-cli.json:ro
      - /app/node_modules
      - ./uploads:/app/uploads
    command: npm run start:dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  chat-network:
    driver: bridge
    name: chat-network

volumes:
  postgres_data:
    name: chat-postgres-data 